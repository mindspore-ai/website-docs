:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_converter_include_ops_sigmoid_cross_entropy_with_logits.h:

Program Listing for File sigmoid_cross_entropy_with_logits.h
============================================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_converter_include_ops_sigmoid_cross_entropy_with_logits.h>` (``include/converter/include/ops/sigmoid_cross_entropy_with_logits.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   
   #ifndef MINDSPORE_CORE_OPS_SIGMOID_CROSS_ENTROPY_WITH_LOGITS_H_
   #define MINDSPORE_CORE_OPS_SIGMOID_CROSS_ENTROPY_WITH_LOGITS_H_
   #include <vector>
   #include <memory>
   #include <string>
   #include <set>
   #include <map>
   
   #include "ops/base_operator.h"
   #include "mindapi/base/types.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameSigmoidCrossEntropyWithLogits = "SigmoidCrossEntropyWithLogits";
   class MIND_API SigmoidCrossEntropyWithLogits : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(SigmoidCrossEntropyWithLogits);
     SigmoidCrossEntropyWithLogits() : BaseOperator(kNameSigmoidCrossEntropyWithLogits) {
       InitIOName({"predict", "target"}, {"loss"});
     }
     void Init() const {}
   };
   using kPrimSigmoidCrossEntropyWithLogitsPtr = std::shared_ptr<SigmoidCrossEntropyWithLogits>;
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_SIGMOID_CROSS_ENTROPY_WITH_LOGITS_H_
