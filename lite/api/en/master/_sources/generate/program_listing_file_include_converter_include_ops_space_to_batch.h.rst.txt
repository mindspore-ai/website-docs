:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_converter_include_ops_space_to_batch.h:

Program Listing for File space_to_batch.h
=========================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_converter_include_ops_space_to_batch.h>` (``include/converter/include/ops/space_to_batch.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   
   #ifndef MINDSPORE_CORE_OPS_SPACE_TO_BATCH_H_
   #define MINDSPORE_CORE_OPS_SPACE_TO_BATCH_H_
   
   #include <map>
   #include <vector>
   #include <string>
   #include <memory>
   
   #include "ops/base_operator.h"
   #include "mindapi/base/types.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameSpaceToBatch = "SpaceToBatch";
   class MIND_API SpaceToBatch : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(SpaceToBatch);
     SpaceToBatch() : BaseOperator(kNameSpaceToBatch) {}
     void Init(const std::vector<int64_t> block_size, const std::vector<std::vector<int64_t>> &paddings);
     void set_paddings(const std::vector<std::vector<int64_t>> &paddings);
     void set_block_size(const std::vector<int64_t> block_size);
     std::vector<int64_t> get_block_size() const;
     std::vector<std::vector<int64_t>> get_paddings() const;
   };
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_SPACE_TO_BATCH_H_
