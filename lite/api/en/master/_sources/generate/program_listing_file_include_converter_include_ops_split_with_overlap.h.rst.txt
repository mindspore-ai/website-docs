:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_converter_include_ops_split_with_overlap.h:

Program Listing for File split_with_overlap.h
=============================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_converter_include_ops_split_with_overlap.h>` (``include/converter/include/ops/split_with_overlap.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   
   #ifndef MINDSPORE_CORE_OPS_SPLIT_WITH_OVERLAP_H_
   #define MINDSPORE_CORE_OPS_SPLIT_WITH_OVERLAP_H_
   #include <vector>
   #include <memory>
   #include "ops/base_operator.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameSplitWithOverlap = "SplitWithOverlap";
   class MIND_API SplitWithOverlap : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(SplitWithOverlap);
     SplitWithOverlap() : BaseOperator(kNameSplitWithOverlap) {}
   
     void Init(int64_t number_split, const std::vector<int64_t> &ratio, const std::vector<int64_t> &extend_top,
               const std::vector<int64_t> &extend_bottom, int64_t split_dim, int64_t stride, int64_t pad_top,
               bool trans_format);
   
     void set_ratio(const std::vector<int64_t> &ratio);
   
     void set_extend_top(const std::vector<int64_t> &extend_top);
   
     void set_extend_bottom(const std::vector<int64_t> &extend_bottom);
   
     void set_number_split(int64_t number_split);
   
     void set_split_dim(int64_t split_dim);
   
     void set_split_stride(int64_t stride);
   
     void set_pad_top(int64_t pad_top);
   
     void set_trans_format(bool trans_format);
   
     std::vector<int64_t> get_ratio() const;
   
     std::vector<int64_t> get_extend_top() const;
   
     std::vector<int64_t> get_extend_bottom() const;
   
     int64_t get_number_split() const;
   
     int64_t get_split_dim() const;
   
     int64_t get_split_stride() const;
   
     int64_t get_pad_top() const;
   
     bool get_trans_format() const;
   };
   }  // namespace ops
   }  // namespace mindspore
   #endif  // MINDSPORE_CORE_OPS_SPLIT_WITH_OVERLAP_H_
