:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_converter_include_ops_squeeze.h:

Program Listing for File squeeze.h
==================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_converter_include_ops_squeeze.h>` (``include/converter/include/ops/squeeze.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   
   #ifndef MINDSPORE_CORE_OPS_SQUEEZE_H_
   #define MINDSPORE_CORE_OPS_SQUEEZE_H_
   
   #include <map>
   #include <vector>
   #include <string>
   #include <memory>
   #include <algorithm>
   
   #include "ops/base_operator.h"
   #include "mindapi/base/types.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameSqueeze = "Squeeze";
   class MIND_API Squeeze : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(Squeeze);
     Squeeze() : BaseOperator(kNameSqueeze) { InitIOName({"x"}, {"output"}); }
     void Init(const std::vector<int64_t> &axis = {});
     void set_axis(const std::vector<int64_t> &axis);
     std::vector<int64_t> get_axis() const;
   };
   
   MIND_API abstract::AbstractBasePtr SqueezeInfer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                                                   const std::vector<abstract::AbstractBasePtr> &input_args);
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_SQUEEZE_H_
