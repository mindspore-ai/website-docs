:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_converter_include_ops_adam.h:

Program Listing for File adam.h
===============================

|exhale_lsh| :ref:`Return to documentation for file <file_include_converter_include_ops_adam.h>` (``include/converter/include/ops/adam.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   
   #ifndef MINDSPORE_CORE_OPS_ADAM_H_
   #define MINDSPORE_CORE_OPS_ADAM_H_
   #include <map>
   #include <memory>
   #include <string>
   #include <vector>
   #include "mindapi/base/types.h"
   #include "ops/base_operator.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameAdam = "Adam";
   class MIND_API Adam : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(Adam);
     Adam() : BaseOperator(kNameAdam) {}
     void Init(const bool use_locking = false, const bool use_nesterov = false);
     void set_use_locking(const bool use_locking);
     void set_use_nesterov(const bool use_nesterov);
     bool get_use_locking() const;
     bool get_use_nesterov() const;
   };
   using kPrimAdamPtr = std::shared_ptr<Adam>;
   MIND_API abstract::AbstractBasePtr ApplyAdamInferFunc(const abstract::AnalysisEnginePtr &,
                                                         const PrimitivePtr &primitive,
                                                         const std::vector<abstract::AbstractBasePtr> &input_args);
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_ADAM_H_
