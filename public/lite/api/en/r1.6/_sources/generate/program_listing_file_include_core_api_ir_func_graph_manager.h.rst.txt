:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_api_ir_func_graph_manager.h:

Program Listing for File func_graph_manager.h
=============================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_api_ir_func_graph_manager.h>` (``include/core/api/ir/func_graph_manager.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_API_IR_FUNC_GRAPH_MANAGER_H_
   #define MINDSPORE_CORE_API_IR_FUNC_GRAPH_MANAGER_H_
   
   #include <memory>
   #include <utility>
   
   #include "utils/visible.h"
   #include "utils/compact_set.h"
   #include "utils/hash_map.h"
   #include "utils/hashing.h"
   #include "ir/anf.h"
   
   namespace mindspore::deprecated::api {
   class FuncGraph;
   using FuncGraphPtr = std::shared_ptr<FuncGraph>;
   
   class FuncGraphManager;
   using FuncGraphManagerPtr = std::shared_ptr<FuncGraphManager>;
   
   using AnfNodeIndexSet = CompactSet<std::pair<AnfNodePtr, int>>;
   using NodeUsersMap = mindspore::HashMap<AnfNodePtr, AnfNodeIndexSet, PointerHash<AnfNodePtr>>;
   
   class MS_CORE_API FuncGraphManager {
    public:
     FuncGraphManager() = default;
   
     virtual ~FuncGraphManager() = default;
   
     virtual bool Replace(const AnfNodePtr &old_node, const AnfNodePtr &new_node) = 0;
   
     virtual void SetEdge(const AnfNodePtr &node, int index, const AnfNodePtr &value) = 0;
   
     virtual void AddEdge(const AnfNodePtr &node, const AnfNodePtr &value) = 0;
   
     virtual const NodeUsersMap &node_users() const = 0;
   
     static FuncGraphManagerPtr Manage(const FuncGraphPtr &func_graph, bool manage = true);
   };
   }  // namespace mindspore::deprecated::api
   
   #ifndef USE_DEPRECATED_API
   #define USE_DEPRECATED_API
   namespace mindspore {
   namespace api = deprecated::api;
   }
   #endif
   
   #endif  // MINDSPORE_CORE_API_IR_FUNC_GRAPH_MANAGER_H_
