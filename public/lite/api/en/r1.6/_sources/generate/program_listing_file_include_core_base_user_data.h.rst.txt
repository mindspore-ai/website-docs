:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_base_user_data.h:

Program Listing for File user_data.h
====================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_base_user_data.h>` (``include/core/base/user_data.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_USER_DATA_H_
   #define MINDSPORE_CORE_USER_DATA_H_
   
   #include <string>
   #include <memory>
   #include "utils/hash_map.h"
   
   namespace mindspore {
   class UserData {
    public:
     template <typename T>
     void set(const std::string &key, const std::shared_ptr<T> &value) {
       if (value == nullptr) {
         data_.erase(key);
       } else {
         data_.insert_or_assign(key, value);
       }
     }
   
     template <typename T>
     std::shared_ptr<T> get(const std::string &key) const {
       auto iter = data_.find(key);
       if (iter == data_.end()) {
         return nullptr;
       }
       return std::static_pointer_cast<T>(iter->second);
     }
   
     bool has(const std::string &key) const { return data_.find(key) != data_.end(); }
   
    private:
     mindspore::HashMap<std::string, std::shared_ptr<void>> data_;
   };
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_USER_DATA_H_
