:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_ctc_loss_v2.h:

Program Listing for File ctc_loss_v2.h
======================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_ctc_loss_v2.h>` (``include/core/ops/ctc_loss_v2.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_CTC_LOSS_V2_H_
   #define MINDSPORE_CORE_OPS_CTC_LOSS_V2_H_
   #include <map>
   #include <vector>
   #include <string>
   #include <memory>
   
   #include "ops/primitive_c.h"
   #include "abstract/abstract_value.h"
   #include "utils/check_convert_utils.h"
   namespace mindspore {
   namespace ops {
   constexpr auto kNameCTCLossV2 = "CTCLossV2";
   class MS_CORE_API CTCLossV2 : public PrimitiveC {
    public:
     CTCLossV2() : PrimitiveC(kNameCTCLossV2) {
       InitIOName({"log_probs", "targets", "input_lengths", "target_lengths"}, {"neg_log_likelihood", "log_alpha"});
     }
     ~CTCLossV2() = default;
     MS_DECLARE_PARENT(CTCLossV2, PrimitiveC);
     void Init() {}
   };
   
   AbstractBasePtr CTCLossV2Infer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                                  const std::vector<AbstractBasePtr> &input_args);
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_CTC_LOSS_V2_H_
