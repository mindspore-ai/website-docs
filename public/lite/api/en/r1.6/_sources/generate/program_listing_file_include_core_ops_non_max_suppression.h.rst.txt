:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_non_max_suppression.h:

Program Listing for File non_max_suppression.h
==============================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_non_max_suppression.h>` (``include/core/ops/non_max_suppression.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_NON_MAX_SUPPRESSION_H_
   #define MINDSPORE_CORE_OPS_NON_MAX_SUPPRESSION_H_
   
   #include <map>
   #include <vector>
   #include <string>
   #include <memory>
   #include <algorithm>
   #include "ops/op_utils.h"
   #include "ops/primitive_c.h"
   #include "abstract/primitive_infer_map.h"
   #include "abstract/abstract_value.h"
   #include "utils/check_convert_utils.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameNonMaxSuppression = "NonMaxSuppression";
   class MS_CORE_API NonMaxSuppression : public PrimitiveC {
    public:
     NonMaxSuppression() : PrimitiveC(kNameNonMaxSuppression) {}
   
     ~NonMaxSuppression() = default;
   
     MS_DECLARE_PARENT(NonMaxSuppression, PrimitiveC);
   
     void Init(const int64_t center_point_box = 0);
   
     void set_center_point_box(const int64_t center_point_box);
   
     int64_t get_center_point_box() const;
   };
   AbstractBasePtr NonMaxSuppressionInfer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                                          const std::vector<AbstractBasePtr> &input_args);
   using PrimNonMaxSuppressionPtr = std::shared_ptr<NonMaxSuppression>;
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_NON_MAX_SUPPRESSION_H_
