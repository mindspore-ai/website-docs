:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_non_max_suppression_v3.h:

Program Listing for File non_max_suppression_v3.h
=================================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_non_max_suppression_v3.h>` (``include/core/ops/non_max_suppression_v3.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_NON_MAX_SUPPRESSION_V3_H_
   #define MINDSPORE_CORE_OPS_NON_MAX_SUPPRESSION_V3_H_
   
   #include <map>
   #include <vector>
   #include <string>
   #include <memory>
   #include <algorithm>
   #include "ops/op_utils.h"
   #include "ops/primitive_c.h"
   #include "abstract/primitive_infer_map.h"
   #include "abstract/abstract_value.h"
   #include "abstract/dshape.h"
   #include "utils/check_convert_utils.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameNonMaxSuppressionV3 = "NonMaxSuppressionV3";
   class NonMaxSuppressionV3 : public PrimitiveC {
    public:
     NonMaxSuppressionV3() : PrimitiveC(kNameNonMaxSuppressionV3) {
       InitIOName({"boxes", "score", "max_output_size", "iou_threshold", "score_threshold"}, {"selected_indices"});
     }
     ~NonMaxSuppressionV3() = default;
     MS_DECLARE_PARENT(NonMaxSuppressionV3, PrimitiveC);
   };
   AbstractBasePtr NonMaxSuppressionV3Infer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                                            const std::vector<AbstractBasePtr> &input_args);
   using PrimNonMaxSuppressionV3Ptr = std::shared_ptr<NonMaxSuppressionV3>;
   }  // namespace ops
   }  // namespace mindspore
   #endif  // MINDSPORE_CORE_OPS_NON_MAX_SUPPRESSION_V3_H_
