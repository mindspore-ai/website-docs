:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_proposal.h:

Program Listing for File proposal.h
===================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_proposal.h>` (``include/core/ops/proposal.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_PROPOSAL_H_
   #define MINDSPORE_CORE_OPS_PROPOSAL_H_
   #include <vector>
   
   #include "ops/primitive_c.h"
   #include "abstract/abstract_value.h"
   #include "utils/check_convert_utils.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameProposal = "Proposal";
   class MS_CORE_API Proposal : public PrimitiveC {
    public:
     Proposal() : PrimitiveC(kNameProposal) {}
     ~Proposal() = default;
     MS_DECLARE_PARENT(Proposal, PrimitiveC);
   
     void Init(const float feat_stride, const float base_size, const float min_size, const std::vector<float> &ratio,
               const std::vector<float> &scale, const int64_t pre_nms_topn, const int64_t post_nms_topn,
               const float nms_thresh);
     void set_feat_stride(const float feat_stride);
     void set_base_size(const float base_size);
     void set_min_size(const float min_size);
     void set_ratio(const std::vector<float> &ratio);
     void set_scale(const std::vector<float> &scale);
     void set_pre_nms_topn(const int64_t pre_nms_topn);
     void set_post_nms_topn(const int64_t post_nms_topn);
     void set_nms_thresh(const float nms_thresh);
     float get_feat_stride() const;
     float get_base_size() const;
     float get_min_size() const;
     std::vector<float> get_ratio() const;
     std::vector<float> get_scale() const;
     int64_t get_pre_nms_topn() const;
     int64_t get_post_nms_topn() const;
     float get_nms_thresh() const;
   };
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_PROPOSAL_H_
