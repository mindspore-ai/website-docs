:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_range.h:

Program Listing for File range.h
================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_range.h>` (``include/core/ops/range.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_RANGE_H_
   #define MINDSPORE_CORE_OPS_RANGE_H_
   #include <map>
   #include <vector>
   #include <string>
   #include <memory>
   #include "ops/primitive_c.h"
   #include "abstract/abstract_value.h"
   #include "utils/check_convert_utils.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameRange = "Range";
   class MS_CORE_API Range : public PrimitiveC {
    public:
     Range() : PrimitiveC(kNameRange) {}
     ~Range() = default;
     MS_DECLARE_PARENT(Range, PrimitiveC);
     void Init(const int64_t d_type, const int64_t start, const int64_t limit, const int64_t delta);
     void set_d_type(const int64_t d_type);
     void set_start(const int64_t start);
     void set_limit(const int64_t limit);
     void set_delta(const int64_t delta);
     int64_t get_d_type() const;
     int64_t get_start() const;
     int64_t get_limit() const;
     int64_t get_delta() const;
   };
   
   AbstractBasePtr RangeInfer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                              const std::vector<AbstractBasePtr> &input_args);
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_RANGE_H_
