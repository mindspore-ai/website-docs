:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_reduce.h:

Program Listing for File reduce.h
=================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_reduce.h>` (``include/core/ops/reduce.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_REDUCE_H_
   #define MINDSPORE_CORE_OPS_REDUCE_H_
   #include <map>
   #include <vector>
   #include <string>
   #include <memory>
   #include "ops/primitive_c.h"
   #include "abstract/abstract_value.h"
   #include "utils/check_convert_utils.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameReduce = "Reduce";
   class MS_CORE_API Reduce : public PrimitiveC {
    public:
     Reduce() : PrimitiveC(kNameReduce) { InitIOName({"input_x", "axis"}, {"y"}); }
   
     explicit Reduce(const std::string k_name) : PrimitiveC(k_name) { InitIOName({"input_x", "axis"}, {"y"}); }
   
     ~Reduce() = default;
   
     MS_DECLARE_PARENT(Reduce, PrimitiveC);
   
     void Init(const bool keep_dims = false);
   
     void set_keep_dims(const bool keep_dims);
   
     bool get_keep_dims() const;
   };
   AbstractBasePtr ReduceInfer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                               const std::vector<AbstractBasePtr> &input_args);
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_REDUCE_H_
