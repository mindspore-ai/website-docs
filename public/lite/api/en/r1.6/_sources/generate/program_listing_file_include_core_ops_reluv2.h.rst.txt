:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_reluv2.h:

Program Listing for File reluv2.h
=================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_reluv2.h>` (``include/core/ops/reluv2.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_ReLUV2_H_
   #define MINDSPORE_CORE_OPS_ReLUV2_H_
   #include <map>
   #include <vector>
   #include <string>
   #include <memory>
   #include "ops/primitive_c.h"
   #include "ops/op_utils.h"
   #include "abstract/abstract_value.h"
   #include "utils/check_convert_utils.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameReLUV2 = prim::kReLUV2;
   class MS_CORE_API ReLUV2 : public PrimitiveC {
    public:
     ReLUV2() : PrimitiveC(prim::kPrimReluV2->name()) { InitIOName({"x"}, {"output", "mask"}); }
     explicit ReLUV2(const std::string k_name) : PrimitiveC(k_name) { InitIOName({"x"}, {"output", "mask"}); }
     ~ReLUV2() = default;
     MS_DECLARE_PARENT(ReLUV2, PrimitiveC);
     void Init() {}
   };
   AbstractBasePtr ReLUV2Infer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                               const std::vector<AbstractBasePtr> &input_args);
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_ReLUV2_H_
