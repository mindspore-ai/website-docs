:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_resize_bilinear.h:

Program Listing for File resize_bilinear.h
==========================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_resize_bilinear.h>` (``include/core/ops/resize_bilinear.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_RESIZE_BILINEAR_H_
   #define MINDSPORE_CORE_OPS_RESIZE_BILINEAR_H_
   #include <map>
   #include <vector>
   #include <string>
   #include <memory>
   #include "ops/primitive_c.h"
   #include "abstract/abstract_value.h"
   #include "utils/check_convert_utils.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameResizeBilinear = "ResizeBilinear";
   class MS_CORE_API ResizeBilinear : public PrimitiveC {
    public:
     ResizeBilinear() : PrimitiveC(kNameResizeBilinear) {}
     ~ResizeBilinear() = default;
     MS_DECLARE_PARENT(ResizeBilinear, PrimitiveC);
     void Init(const std::vector<int64_t> &size, const bool align_corners = false);
     void set_size(const std::vector<int64_t> &size);
     void set_align_corners(const bool align_corners);
     std::vector<int64_t> get_size() const;
     bool get_align_corners() const;
   };
   AbstractBasePtr ResizeBilinearInfer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                                       const std::vector<AbstractBasePtr> &input_args);
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_RESIZE_BILINEAR_H_
