:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_scatter_non_aliasing_add.h:

Program Listing for File scatter_non_aliasing_add.h
===================================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_scatter_non_aliasing_add.h>` (``include/core/ops/scatter_non_aliasing_add.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_SCATTER_NON_ALIASING_ADD_H_
   #define MINDSPORE_CORE_OPS_SCATTER_NON_ALIASING_ADD_H_
   #include <memory>
   #include <vector>
   
   #include "abstract/abstract_value.h"
   #include "ops/primitive_c.h"
   #include "utils/check_convert_utils.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameScatterNonAliasingAdd = "ScatterNonAliasingAdd";
   class ScatterNonAliasingAdd : public PrimitiveC {
    public:
     ScatterNonAliasingAdd() : PrimitiveC(kNameScatterNonAliasingAdd) {
       InitIOName({"input_x", "indices", "updates"}, {"y"});
     }
     ~ScatterNonAliasingAdd() = default;
     MS_DECLARE_PARENT(ScatterNonAliasingAdd, PrimitiveC);
   };
   
   AbstractBasePtr ScatterNonAliasingAddInfer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                                              const std::vector<AbstractBasePtr> &input_args);
   using kPrimScatterNonAliasingAddPtr = std::shared_ptr<ScatterNonAliasingAdd>;
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_SCATTER_NON_ALIASING_ADD_H_
