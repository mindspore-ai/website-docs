:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_unsorted_segment_sum.h:

Program Listing for File unsorted_segment_sum.h
===============================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_unsorted_segment_sum.h>` (``include/core/ops/unsorted_segment_sum.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_UNSORTED_SEGMENT_SUM_H_
   #define MINDSPORE_CORE_OPS_UNSORTED_SEGMENT_SUM_H_
   
   #include <map>
   #include <vector>
   #include <string>
   #include <memory>
   #include "ops/primitive_c.h"
   #include "abstract/abstract_value.h"
   #include "utils/check_convert_utils.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameUnsortedSegmentSum = "UnsortedSegmentSum";
   class MS_CORE_API UnsortedSegmentSum : public PrimitiveC {
    public:
     UnsortedSegmentSum() : PrimitiveC(kNameUnsortedSegmentSum) {
       InitIOName({"x", "segment_ids", "num_segments"}, {"y"});
     }
     ~UnsortedSegmentSum() = default;
     MS_DECLARE_PARENT(UnsortedSegmentSum, PrimitiveC);
     void Init() {}
   };
   
   AbstractBasePtr UnsortedSegmentSumInfer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                                           const std::vector<AbstractBasePtr> &input_args);
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_UNSORTED_SEGMENT_SUM_H_
