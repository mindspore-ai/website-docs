:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ir_primal_attr.h:

Program Listing for File primal_attr.h
======================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ir_primal_attr.h>` (``include/core/ir/primal_attr.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_IR_PRIMAL_ATTR_H_
   #define MINDSPORE_CORE_IR_PRIMAL_ATTR_H_
   #include <string>
   #include <memory>
   #include <stack>
   #include "utils/hash_map.h"
   #include "utils/visible.h"
   
   namespace mindspore {
   class Value;
   using ValuePtr = std::shared_ptr<Value>;
   
   class MS_CORE_API PrimalAttrManager {
    public:
     static PrimalAttrManager &GetInstance() noexcept;
     PrimalAttrManager(const PrimalAttrManager &) = delete;
     PrimalAttrManager &operator=(const PrimalAttrManager &) = delete;
     ~PrimalAttrManager() = default;
     void SetPrimalAttr(const mindspore::HashMap<std::string, ValuePtr> &primal_attrs) { primal_attrs_ = primal_attrs; }
     void ClearPrimalAttr() noexcept { primal_attrs_.clear(); }
     mindspore::HashMap<std::string, ValuePtr> GetCurrentPrimalAttr() { return primal_attrs_; }
   
    private:
     PrimalAttrManager() = default;
     mindspore::HashMap<std::string, ValuePtr> primal_attrs_;
   };
   
   // PrimalAttrGuard is a class that help generate the back propagation cnode
   // with specified primal attrs in the current c++ action scope.
   class PrimalAttrGuard {
    public:
     explicit PrimalAttrGuard(const mindspore::HashMap<std::string, ValuePtr> &primal_attrs) {
       PrimalAttrManager::GetInstance().SetPrimalAttr(primal_attrs);
     }
     ~PrimalAttrGuard() { PrimalAttrManager::GetInstance().ClearPrimalAttr(); }
   };
   }  // namespace mindspore
   #endif  // MINDSPORE_CORE_IR_PRIMAL_ATTR_H_
