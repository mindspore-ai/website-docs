:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_base_operator.h:

Program Listing for File base_operator.h
========================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_base_operator.h>` (``include/core/ops/base_operator.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_BASE_OPERATOR_
   #define MINDSPORE_CORE_OPS_BASE_OPERATOR_
   
   #include <memory>
   #include <string>
   #include <vector>
   
   #include "mindapi/ir/primitive.h"
   
   namespace mindspore {
   namespace abstract {
   class AnalysisEngine;
   using AnalysisEnginePtr = std::shared_ptr<AnalysisEngine>;
   
   class AbstractBase;
   using AbstractBasePtr = std::shared_ptr<AbstractBase>;
   }  // namespace abstract
   }  // namespace mindspore
   
   namespace mindspore {
   class Primitive;
   using PrimitivePtr = std::shared_ptr<Primitive>;
   }  // namespace mindspore
   
   namespace mindspore {
   namespace ops {
   class PrimitiveC;
   using PrimitiveCPtr = std::shared_ptr<PrimitiveC>;
   class MIND_API BaseOperator : public api::Primitive {
    public:
     MIND_API_BASE_MEMBER(BaseOperator);
     explicit BaseOperator(const std::string &name);
     PrimitiveCPtr GetPrim();
   
    protected:
     void InitIOName(const std::vector<std::string> &inputs_name, const std::vector<std::string> &outputs_name);
   };
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_BASE_OPERATOR_
