:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_bn_training_update.h:

Program Listing for File bn_training_update.h
=============================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_bn_training_update.h>` (``include/core/ops/bn_training_update.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_BN_TRAINING_UPDATE_H_
   #define MINDSPORE_CORE_OPS_BN_TRAINING_UPDATE_H_
   
   #include <map>
   #include <memory>
   #include <vector>
   #include <string>
   
   #include "ops/base_operator.h"
   #include "mindapi/base/types.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameBNTrainingUpdate = "BNTrainingUpdate";
   class MIND_API BNTrainingUpdate : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(BNTrainingUpdate);
     BNTrainingUpdate() : BaseOperator(kNameBNTrainingUpdate) {
       InitIOName({"x", "sum", "square_sum", "scale", "b", "mean", "variance"},
                  {"y", "running_mean", "running_variance", "save_mean", "save_inv_variance"});
     }
   };
   
   abstract::AbstractBasePtr BNTrainingUpdateInfer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                                                   const std::vector<abstract::AbstractBasePtr> &input_args);
   
   using kPrimBNTrainingUpdatePtr = std::shared_ptr<BNTrainingUpdate>;
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_BN_TRAINING_UPDATE_H_
