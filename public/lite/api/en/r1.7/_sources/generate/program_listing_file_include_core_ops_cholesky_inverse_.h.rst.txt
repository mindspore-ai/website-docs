:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_cholesky_inverse_.h:

Program Listing for File cholesky_inverse_.h
============================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_cholesky_inverse_.h>` (``include/core/ops/cholesky_inverse_.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_CHOLESKYINVERSE_H_
   #define MINDSPORE_CORE_OPS_CHOLESKYINVERSE_H_
   
   #include <map>
   #include <set>
   #include <memory>
   #include <vector>
   
   #include "ops/base_operator.h"
   #include "mindapi/base/types.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameCholeskyInverse = "CholeskyInverse";
   class MIND_API CholeskyInverse : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(CholeskyInverse);
     CholeskyInverse() : BaseOperator(kNameCholeskyInverse) { InitIOName({"x"}, {"y"}); }
   };
   abstract::AbstractBasePtr CholeskyInverseInfer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                                                  const std::vector<abstract::AbstractBasePtr> &input_args);
   using PrimCholeskyInversePtr = std::shared_ptr<CholeskyInverse>;
   }  // namespace ops
   }  // namespace mindspore
   #endif  // MINDSPORE_CORE_OPS_CHOLESKYINVERSE_H_
