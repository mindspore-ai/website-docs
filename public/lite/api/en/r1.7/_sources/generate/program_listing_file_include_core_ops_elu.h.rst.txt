:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_elu.h:

Program Listing for File elu.h
==============================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_elu.h>` (``include/core/ops/elu.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_ELU_H_
   #define MINDSPORE_CORE_OPS_ELU_H_
   #include <vector>
   #include <memory>
   #include "ops/base_operator.h"
   #include "mindapi/base/types.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameElu = "Elu";
   class MIND_API Elu : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(Elu);
     Elu() : BaseOperator(kNameElu) { InitIOName({"x"}, {"output"}); }
     void Init(const float alpha = 0.0);
     void set_alpha(const float alpha);
     float get_alpha() const;
   };
   abstract::AbstractBasePtr EluInfer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                                      const std::vector<abstract::AbstractBasePtr> &input_args);
   using PrimElu = std::shared_ptr<Elu>;
   }  // namespace ops
   }  // namespace mindspore
   #endif  // MINDSPORE_CORE_OPS_ELU_H_
