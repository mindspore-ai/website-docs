:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_embedding_lookup.h:

Program Listing for File embedding_lookup.h
===========================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_embedding_lookup.h>` (``include/core/ops/embedding_lookup.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_EMBEDDING_LOOKUP_H_
   #define MINDSPORE_CORE_OPS_EMBEDDING_LOOKUP_H_
   #include <map>
   #include <vector>
   #include <string>
   #include <memory>
   #include "ops/base_operator.h"
   #include "mindapi/base/types.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameEmbeddingLookup = "EmbeddingLookup";
   class MIND_API EmbeddingLookup : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(EmbeddingLookup);
     EmbeddingLookup() : BaseOperator(kNameEmbeddingLookup) { InitIOName({"params", "indices", "offset"}, {"output"}); }
     void Init(const bool setattr_flag = true);
     void set_setattr_flag(const bool setattr_flag);
     bool get_setattr_flag() const;
   };
   abstract::AbstractBasePtr EmbeddingLookupInfer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                                                  const std::vector<abstract::AbstractBasePtr> &input_args);
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_EMBEDDING_LOOKUP_H_
