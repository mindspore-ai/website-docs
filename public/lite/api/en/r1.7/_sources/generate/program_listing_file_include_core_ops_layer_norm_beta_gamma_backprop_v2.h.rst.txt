:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_layer_norm_beta_gamma_backprop_v2.h:

Program Listing for File layer_norm_beta_gamma_backprop_v2.h
============================================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_layer_norm_beta_gamma_backprop_v2.h>` (``include/core/ops/layer_norm_beta_gamma_backprop_v2.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_LAYERNORMBETAGAMMABACKPROPV2_H_
   #define MINDSPORE_CORE_OPS_LAYERNORMBETAGAMMABACKPROPV2_H_
   #include <map>
   #include <vector>
   #include <string>
   #include <memory>
   #include "ops/base_operator.h"
   #include "mindapi/base/types.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameLayerNormBetaGammaBackpropV2 = "LayerNormBetaGammaBackpropV2";
   
   class MIND_API LayerNormBetaGammaBackpropV2 : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(LayerNormBetaGammaBackpropV2);
     LayerNormBetaGammaBackpropV2() : BaseOperator(kNameLayerNormBetaGammaBackpropV2) {}
     void Init(const std::vector<int64_t> &shape_gamma);
     void set_shape_gamma(const std::vector<int64_t> &shape_gamma);
     std::vector<int64_t> get_shape_gamma() const;
   };
   
   abstract::AbstractBasePtr LayerNormBetaGammaBackpropV2Infer(const abstract::AnalysisEnginePtr &,
                                                               const PrimitivePtr &primitive,
                                                               const std::vector<abstract::AbstractBasePtr> &input_args);
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_LAYERNORMBETAGAMMABACKPROPV2_H_
