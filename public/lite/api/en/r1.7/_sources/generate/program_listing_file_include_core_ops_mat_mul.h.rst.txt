:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_mat_mul.h:

Program Listing for File mat_mul.h
==================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_mat_mul.h>` (``include/core/ops/mat_mul.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_MAT_MUL_H_
   #define MINDSPORE_CORE_OPS_MAT_MUL_H_
   #include <vector>
   #include <memory>
   #include <string>
   
   #include "ops/base_operator.h"
   #include "mindapi/base/types.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameMatMul = "MatMul";
   class MIND_API MatMul : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(MatMul);
     MatMul() : BaseOperator(kNameMatMul) { InitIOName({"x1", "x2"}, {"output"}); }
     explicit MatMul(const std::string k_name) : BaseOperator(k_name) { InitIOName({"x", "x2"}, {"output"}); }
     void Init(bool transpose_a = false, bool transpose_b = false);
     void set_transpose_a(bool transpose_a);
     void set_transpose_b(bool transpose_b);
     bool get_transpose_a() const;
     bool get_transpose_b() const;
   };
   }  // namespace ops
   }  // namespace mindspore
   #endif  // MINDSPORE_CORE_OPS_MAT_MUL_H_
