:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_non_max_suppression_v3.h:

Program Listing for File non_max_suppression_v3.h
=================================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_non_max_suppression_v3.h>` (``include/core/ops/non_max_suppression_v3.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_NON_MAX_SUPPRESSION_V3_H_
   #define MINDSPORE_CORE_OPS_NON_MAX_SUPPRESSION_V3_H_
   
   #include <map>
   #include <vector>
   #include <string>
   #include <memory>
   #include <algorithm>
   
   #include "ops/base_operator.h"
   #include "mindapi/base/types.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameNonMaxSuppressionV3 = "NonMaxSuppressionV3";
   class MIND_API NonMaxSuppressionV3 : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(NonMaxSuppressionV3);
     NonMaxSuppressionV3() : BaseOperator(kNameNonMaxSuppressionV3) {
       InitIOName({"boxes", "score", "max_output_size", "iou_threshold", "score_threshold"}, {"selected_indices"});
     }
   };
   abstract::AbstractBasePtr NonMaxSuppressionV3Infer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                                                      const std::vector<abstract::AbstractBasePtr> &input_args);
   using PrimNonMaxSuppressionV3Ptr = std::shared_ptr<NonMaxSuppressionV3>;
   }  // namespace ops
   }  // namespace mindspore
   #endif  // MINDSPORE_CORE_OPS_NON_MAX_SUPPRESSION_V3_H_
