:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_core_ops_tensor_array.h:

Program Listing for File tensor_array.h
=======================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_core_ops_tensor_array.h>` (``include/core/ops/tensor_array.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OPS_TENSOR_ARRAY_H_
   #define MINDSPORE_CORE_OPS_TENSOR_ARRAY_H_
   #include <vector>
   #include <string>
   #include "ops/base_operator.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameTensorArray = "TensorArray";
   
   class MIND_API TensorArray : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(TensorArray);
     TensorArray() : BaseOperator(kNameTensorArray) { InitIOName({"size"}, {"handle", "flow"}); }
     void Init(bool dynamic_size, bool identical_element_shapes, const std::vector<int> &element_shape, int data_type);
     void set_dynamic_size(bool dynamic_size);
     void set_identical_element_shapes(bool identical_element_shapes);
     void set_element_shape(const std::vector<int> &element_shape);
     void set_data_type(int data_type);
     bool get_dynamic_size() const;
     bool get_identical_element_shapes() const;
     const std::vector<int> get_element_shape() const;
     int get_data_type() const;
   };
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_TENSOR_ARRAY_H_
