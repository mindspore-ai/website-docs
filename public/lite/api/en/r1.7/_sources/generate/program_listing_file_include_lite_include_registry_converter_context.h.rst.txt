:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_lite_include_registry_converter_context.h:

Program Listing for File converter_context.h
============================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_lite_include_registry_converter_context.h>` (``include/lite/include/registry/converter_context.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_LITE_INCLUDE_REGISTRY_PARSER_CONTEXT_H_
   #define MINDSPORE_LITE_INCLUDE_REGISTRY_PARSER_CONTEXT_H_
   
   #include <map>
   #include <string>
   #include <vector>
   #include "include/lite_utils.h"
   #include "include/api/dual_abi_helper.h"
   
   namespace mindspore {
   namespace converter {
   enum  FmkType : int {
     kFmkTypeTf = 0,
     kFmkTypeCaffe = 1,
     kFmkTypeOnnx = 2,
     kFmkTypeMs = 3,
     kFmkTypeTflite = 4,
   };
   
   struct  ConverterParameters {
     FmkType fmk;
     std::string model_file;
     std::string weight_file;
     std::map<std::string, std::string> attrs;
   };
   
   class  ConverterContext {
    public:
     ConverterContext() = default;
   
     ~ConverterContext() = default;
   
     static void SetGraphOutputTensorNames(const std::vector<std::string> &output_names) {
       SetGraphOutputTensorNames(VectorStringToChar(output_names));
     }
   
     static std::vector<std::string> GetGraphOutputTensorNames() {
       return VectorCharToString(GetGraphOutputTensorNamesInChar());
     }
   
     static std::map<std::string, std::string> GetConfigInfo(const std::string &section) {
       return MapVectorCharToString(GetConfigInfo(StringToChar(section)));
     }
   
    private:
     static void SetGraphOutputTensorNames(const std::vector<std::vector<char>> &&output_names);
     static std::vector<std::vector<char>> GetGraphOutputTensorNamesInChar();
     static std::map<std::vector<char>, std::vector<char>> GetConfigInfo(const std::vector<char> &&section);
   };
   }  // namespace converter
   }  // namespace mindspore
   
   #endif  // MINDSPORE_LITE_INCLUDE_REGISTRY_PARSER_CONTEXT_H_
