:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_converter_include_core_ops_assert.h:

Program Listing for File assert.h
=================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_converter_include_core_ops_assert.h>` (``include/converter/include/core/ops/assert.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   
   #ifndef MINDSPORE_CORE_OPS_ASSERT_H_
   #define MINDSPORE_CORE_OPS_ASSERT_H_
   #include <vector>
   #include <memory>
   #include "ops/base_operator.h"
   #include "mindapi/base/types.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameAssert = "Assert";
   class MIND_API Assert : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(Assert);
     Assert() : BaseOperator(kNameAssert) {}
   
     void Init(const int64_t summarize = 3);
   
     void set_summarize(const int64_t summarize);
   
     int64_t get_summarize() const;
   };
   
   abstract::AbstractBasePtr AssertInfer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                                         const std::vector<abstract::AbstractBasePtr> &input_args);
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_ASSERT_H_
