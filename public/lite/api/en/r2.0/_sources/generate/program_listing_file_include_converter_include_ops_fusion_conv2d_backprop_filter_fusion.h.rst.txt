:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_converter_include_ops_fusion_conv2d_backprop_filter_fusion.h:

Program Listing for File conv2d_backprop_filter_fusion.h
========================================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_converter_include_ops_fusion_conv2d_backprop_filter_fusion.h>` (``include/converter/include/ops/fusion/conv2d_backprop_filter_fusion.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   
   #ifndef MINDSPORE_CORE_OPS_CONV2D_BACKPROP_FILTER_FUSION_H_
   #define MINDSPORE_CORE_OPS_CONV2D_BACKPROP_FILTER_FUSION_H_
   #include <vector>
   #include <memory>
   
   #include "ops/grad/conv2d_backprop_filter.h"
   #include "mindapi/base/types.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameConv2DBackpropFilterFusion = "Conv2DBackpropFilterFusion";
   class MIND_API Conv2DBackpropFilterFusion : public Conv2DBackpropFilter {
    public:
     MIND_API_BASE_MEMBER(Conv2DBackpropFilterFusion);
     Conv2DBackpropFilterFusion() : Conv2DBackpropFilter(kNameConv2DBackpropFilterFusion) {
       InitIOName({"out_backprop", "input", "filter_sizes"}, {"output"});
     }
   
     void Init(const int64_t out_channel, const std::vector<int64_t> &kernel_size, const PadMode &pad_mode = VALID,
               const std::vector<int64_t> &pad_list = {0, 0, 0, 0}, const int64_t mode = 1,
               const std::vector<int64_t> &stride = {1, 1}, const std::vector<int64_t> &dilation = {1, 1, 1, 1},
               const int64_t group = 1, const Format &format = NCHW, const ActivationType activation_type = NO_ACTIVATION);
   
     void set_activation_type(const ActivationType activation_type);
   
     void set_in_channel(const int64_t in_channel);
   
     ActivationType get_activation_type() const;
   
     int64_t get_in_channel() const;
   };
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_CONV2D_BACKPROP_FILTER_FUSION_H_
