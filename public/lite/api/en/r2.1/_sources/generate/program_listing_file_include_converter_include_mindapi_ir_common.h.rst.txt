:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_converter_include_mindapi_ir_common.h:

Program Listing for File common.h
=================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_converter_include_mindapi_ir_common.h>` (``include/converter/include/mindapi/ir/common.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   
   #ifndef MINDSPORE_CORE_MINDAPI_IR_COMMON_H_
   #define MINDSPORE_CORE_MINDAPI_IR_COMMON_H_
   
   #include <vector>
   #include "mindapi/base/shared_ptr.h"
   
   namespace mindspore::api {
   class AnfNode;
   using AnfNodePtr = SharedPtr<AnfNode>;
   using AnfNodePtrList = std::vector<AnfNodePtr>;
   
   class Value;
   using ValuePtr = SharedPtr<Value>;
   using ValuePtrList = std::vector<ValuePtr>;
   
   class Primitive;
   using PrimitivePtr = SharedPtr<Primitive>;
   
   class Type;
   using TypePtr = SharedPtr<Type>;
   
   class AbstractBase;
   using AbstractBasePtr = SharedPtr<AbstractBase>;
   using AbstractBasePtrList = std::vector<AbstractBasePtr>;
   
   class Shape;
   using ShapePtr = SharedPtr<Shape>;
   
   class FuncGraph;
   using FuncGraphPtr = SharedPtr<FuncGraph>;
   
   class FuncGraphManager;
   using FuncGraphManagerPtr = SharedPtr<FuncGraphManager>;
   
   class CNode;
   using CNodePtr = SharedPtr<CNode>;
   using CNodePtrList = std::vector<CNodePtr>;
   }  // namespace mindspore::api
   #endif  // MINDSPORE_CORE_MINDAPI_IR_COMMON_H_
