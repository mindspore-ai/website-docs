:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_converter_include_ops_exp.h:

Program Listing for File exp.h
==============================

|exhale_lsh| :ref:`Return to documentation for file <file_include_converter_include_ops_exp.h>` (``include/converter/include/ops/exp.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   
   #ifndef MINDSPORE_CORE_OPS_EXP_H_
   #define MINDSPORE_CORE_OPS_EXP_H_
   #include <memory>
   #include <string>
   #include <vector>
   
   #include "mindapi/base/types.h"
   #include "ops/base_operator.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameExp = "Exp";
   class MIND_API Exp : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(Exp);
     Exp() : BaseOperator(kNameExp) { InitIOName({"x"}, {"y"}); }
     explicit Exp(const std::string k_name) : BaseOperator(k_name) { InitIOName({"x"}, {"y"}); }
     void Init() const {}
   };
   
   MIND_API abstract::AbstractBasePtr ExpInfer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                                               const std::vector<abstract::AbstractBasePtr> &input_args);
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_EXP_H_
