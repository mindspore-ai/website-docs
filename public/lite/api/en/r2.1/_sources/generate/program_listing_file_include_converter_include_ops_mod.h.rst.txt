:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_converter_include_ops_mod.h:

Program Listing for File mod.h
==============================

|exhale_lsh| :ref:`Return to documentation for file <file_include_converter_include_ops_mod.h>` (``include/converter/include/ops/mod.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   
   #ifndef MINDSPORE_CORE_OPS_MOD_H_
   #define MINDSPORE_CORE_OPS_MOD_H_
   #include <memory>
   #include <vector>
   #include "mindapi/base/types.h"
   #include "ops/base_operator.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameMod = "Mod";
   class MIND_API Mod : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(Mod);
     Mod() : BaseOperator(kNameMod) { InitIOName({"x", "y"}, {"output"}); }
     void Init() const {}
   };
   MIND_API MIND_API abstract::AbstractBasePtr ModInfer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                                                        const std::vector<abstract::AbstractBasePtr> &input_args);
   using kPrimModPtr = std::shared_ptr<Mod>;
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_MOD_H_
