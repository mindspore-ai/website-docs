:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_converter_include_ops_auto_generate_gen_ops_name.h:

Program Listing for File gen_ops_name.h
=======================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_converter_include_ops_auto_generate_gen_ops_name.h>` (``include/converter/include/ops/auto_generate/gen_ops_name.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef MINDSPORE_CORE_OP_NAME_H_
   #define MINDSPORE_CORE_OP_NAME_H_
   
   namespace mindspore::ops {
   constexpr auto kNameACosGrad = "ACosGrad";
   constexpr auto kNameAbsGrad = "AbsGrad";
   constexpr auto kNameAbs = "Abs";
   constexpr auto kNameACos = "ACos";
   constexpr auto kNameAcoshGrad = "AcoshGrad";
   constexpr auto kNameAcosh = "Acosh";
   constexpr auto kNameAdamWeightDecay = "AdamWeightDecay";
   constexpr auto kNameAddExt = "AddExt";
   constexpr auto kNameAdd = "Add";
   constexpr auto kNameAddcdiv = "Addcdiv";
   constexpr auto kNameAddcmul = "Addcmul";
   constexpr auto kNameAddN = "AddN";
   constexpr auto kNameAngle = "Angle";
   constexpr auto kNameApplyCamePart1 = "ApplyCamePart1";
   constexpr auto kNameApplyCamePart2 = "ApplyCamePart2";
   constexpr auto kNameApplyCamePart3 = "ApplyCamePart3";
   constexpr auto kNameApplyCamePart4 = "ApplyCamePart4";
   constexpr auto kNameApplyRotaryPosEmb = "ApplyRotaryPosEmb";
   constexpr auto kNameArgMaxExt = "ArgMaxExt";
   constexpr auto kNameArgmax = "Argmax";
   constexpr auto kNameArgMaxWithValue = "ArgMaxWithValue";
   constexpr auto kNameArgmin = "Argmin";
   constexpr auto kNameArgMinWithValue = "ArgMinWithValue";
   constexpr auto kNameAsinGrad = "AsinGrad";
   constexpr auto kNameAsin = "Asin";
   constexpr auto kNameAsinhGrad = "AsinhGrad";
   constexpr auto kNameAsinh = "Asinh";
   constexpr auto kNameAssignAdd = "AssignAdd";
   constexpr auto kNameAssign = "Assign";
   constexpr auto kNameAtan2 = "Atan2";
   constexpr auto kNameAtanGrad = "AtanGrad";
   constexpr auto kNameAtan = "Atan";
   constexpr auto kNameAtanh = "Atanh";
   constexpr auto kNameAvgPool2DGrad = "AvgPool2DGrad";
   constexpr auto kNameAvgPool2D = "AvgPool2D";
   constexpr auto kNameAvgPoolGrad = "AvgPoolGrad";
   constexpr auto kNameAvgPool = "AvgPool";
   constexpr auto kNameBatchMatMul = "BatchMatMul";
   constexpr auto kNameBatchNormGradGrad = "BatchNormGradGrad";
   constexpr auto kNameBatchNormGrad = "BatchNormGrad";
   constexpr auto kNameBatchNormGradWithActivation = "BatchNormGradWithActivation";
   constexpr auto kNameBatchNorm = "BatchNorm";
   constexpr auto kNameBatchNormWithActivation = "BatchNormWithActivation";
   constexpr auto kNameBatchNormWithAddAndActivation = "BatchNormWithAddAndActivation";
   constexpr auto kNameBetainc = "Betainc";
   constexpr auto kNameBiasAddGrad = "BiasAddGrad";
   constexpr auto kNameBiasAdd = "BiasAdd";
   constexpr auto kNameBatchMatMulExt = "BatchMatMulExt";
   constexpr auto kNameBoolNot = "BoolNot";
   constexpr auto kNameBroadcastTo = "BroadcastTo";
   constexpr auto kNameCast = "Cast";
   constexpr auto kNameCeil = "Ceil";
   constexpr auto kNameCeLU = "CeLU";
   constexpr auto kNameCholeskyGrad = "CholeskyGrad";
   constexpr auto kNameCholeskyInverse = "CholeskyInverse";
   constexpr auto kNameCholesky = "Cholesky";
   constexpr auto kNameClampScalar = "ClampScalar";
   constexpr auto kNameClampTensor = "ClampTensor";
   constexpr auto kNameComplex = "Complex";
   constexpr auto kNameConcat = "Concat";
   constexpr auto kNameConj = "Conj";
   constexpr auto kNameConstantPadND = "ConstantPadND";
   constexpr auto kNameContiguous = "Contiguous";
   constexpr auto kNameConvolutionGrad = "ConvolutionGrad";
   constexpr auto kNameConvolution = "Convolution";
   constexpr auto kNameCopy = "Copy";
   constexpr auto kNameCorrelate = "Correlate";
   constexpr auto kNameCos = "Cos";
   constexpr auto kNameCosh = "Cosh";
   constexpr auto kNameCumProd = "CumProd";
   constexpr auto kNameCumSum = "CumSum";
   constexpr auto kNameCummax = "Cummax";
   constexpr auto kNameCummin = "Cummin";
   constexpr auto kNameDCT = "DCT";
   constexpr auto kNameDecoderKVCache = "DecoderKVCache";
   constexpr auto kNameDense = "Dense";
   constexpr auto kNameDiag = "Diag";
   constexpr auto kNameDiagonal = "Diagonal";
   constexpr auto kNameDiv = "Div";
   constexpr auto kNameDivMod = "DivMod";
   constexpr auto kNameDot = "Dot";
   constexpr auto kNameDropoutGrad = "DropoutGrad";
   constexpr auto kNameDropout = "Dropout";
   constexpr auto kNameEig = "Eig";
   constexpr auto kNameEluGrad = "EluGrad";
   constexpr auto kNameElu = "Elu";
   constexpr auto kNameEmbeddingDenseBackward = "EmbeddingDenseBackward";
   constexpr auto kNameEmbedding = "Embedding";
   constexpr auto kNameEqual = "Equal";
   constexpr auto kNameErf = "Erf";
   constexpr auto kNameErfc = "Erfc";
   constexpr auto kNameErfinv = "Erfinv";
   constexpr auto kNameExp = "Exp";
   constexpr auto kNameExpandDims = "ExpandDims";
   constexpr auto kNameExpm1 = "Expm1";
   constexpr auto kNameExtractImagePatches = "ExtractImagePatches";
   constexpr auto kNameEye = "Eye";
   constexpr auto kNameFastGeLUGrad = "FastGeLUGrad";
   constexpr auto kNameFastGeLU = "FastGeLU";
   constexpr auto kNameFFT2 = "FFT2";
   constexpr auto kNameFFT = "FFT";
   constexpr auto kNameFFTShapeCopy = "FFTShapeCopy";
   constexpr auto kNameFFTWithSize = "FFTWithSize";
   constexpr auto kNameFFTN = "FFTN";
   constexpr auto kNameFFTShift = "FFTShift";
   constexpr auto kNameFillScalar = "FillScalar";
   constexpr auto kNameFillTensor = "FillTensor";
   constexpr auto kNameFlashAttentionScoreGrad = "FlashAttentionScoreGrad";
   constexpr auto kNameFlashAttentionScore = "FlashAttentionScore";
   constexpr auto kNameFlatten = "Flatten";
   constexpr auto kNameFloorDiv = "FloorDiv";
   constexpr auto kNameFloorMod = "FloorMod";
   constexpr auto kNameFloor = "Floor";
   constexpr auto kNameGatherDGradV2 = "GatherDGradV2";
   constexpr auto kNameGatherD = "GatherD";
   constexpr auto kNameGatherNd = "GatherNd";
   constexpr auto kNameGather = "Gather";
   constexpr auto kNameGcd = "Gcd";
   constexpr auto kNameGeLUGrad = "GeLUGrad";
   constexpr auto kNameGeLU = "GeLU";
   constexpr auto kNameGeqrf = "Geqrf";
   constexpr auto kNameGreaterEqual = "GreaterEqual";
   constexpr auto kNameGreater = "Greater";
   constexpr auto kNameGridSampler2DGrad = "GridSampler2DGrad";
   constexpr auto kNameGridSampler2D = "GridSampler2D";
   constexpr auto kNameGridSampler3DGrad = "GridSampler3DGrad";
   constexpr auto kNameGridSampler3D = "GridSampler3D";
   constexpr auto kNameGroupNormGrad = "GroupNormGrad";
   constexpr auto kNameGroupNorm = "GroupNorm";
   constexpr auto kNameHFFT2 = "HFFT2";
   constexpr auto kNameHFFT = "HFFT";
   constexpr auto kNameHFFTN = "HFFTN";
   constexpr auto kNameHShrinkGrad = "HShrinkGrad";
   constexpr auto kNameHShrink = "HShrink";
   constexpr auto kNameHSigmoidGrad = "HSigmoidGrad";
   constexpr auto kNameHSigmoid = "HSigmoid";
   constexpr auto kNameHSwishGrad = "HSwishGrad";
   constexpr auto kNameHSwish = "HSwish";
   constexpr auto kNameIdentity = "Identity";
   constexpr auto kNameIFFT2 = "IFFT2";
   constexpr auto kNameIFFT = "IFFT";
   constexpr auto kNameIFFTN = "IFFTN";
   constexpr auto kNameIFFTShift = "IFFTShift";
   constexpr auto kNameIHFFT2 = "IHFFT2";
   constexpr auto kNameIHFFT = "IHFFT";
   constexpr auto kNameIHFFTN = "IHFFTN";
   constexpr auto kNameIRFFT2 = "IRFFT2";
   constexpr auto kNameIRFFTDouble = "IRFFTDouble";
   constexpr auto kNameIRFFT = "IRFFT";
   constexpr auto kNameIRFFTN = "IRFFTN";
   constexpr auto kNameIsFinite = "IsFinite";
   constexpr auto kNameLayerNormExt = "LayerNormExt";
   constexpr auto kNameLayerNormGradExt = "LayerNormGradExt";
   constexpr auto kNameLayerNormGradGrad = "LayerNormGradGrad";
   constexpr auto kNameLayerNormGrad = "LayerNormGrad";
   constexpr auto kNameLayerNormGradV3 = "LayerNormGradV3";
   constexpr auto kNameLayerNorm = "LayerNorm";
   constexpr auto kNameLayerNormV3 = "LayerNormV3";
   constexpr auto kNameLessEqual = "LessEqual";
   constexpr auto kNameLess = "Less";
   constexpr auto kNameLinSpaceExt = "LinSpaceExt";
   constexpr auto kNameLinSpace = "LinSpace";
   constexpr auto kNameListToTuple = "ListToTuple";
   constexpr auto kNameLog1p = "Log1p";
   constexpr auto kNameLogMatrixDeterminant = "LogMatrixDeterminant";
   constexpr auto kNameLog = "Log";
   constexpr auto kNameLogSoftmaxGrad = "LogSoftmaxGrad";
   constexpr auto kNameLogSoftmax = "LogSoftmax";
   constexpr auto kNameLogicalAnd = "LogicalAnd";
   constexpr auto kNameLogicalNot = "LogicalNot";
   constexpr auto kNameLogicalOr = "LogicalOr";
   constexpr auto kNameLogicalXor = "LogicalXor";
   constexpr auto kNameLogitGrad = "LogitGrad";
   constexpr auto kNameLogit = "Logit";
   constexpr auto kNameMaskedFill = "MaskedFill";
   constexpr auto kNameMatMulExt = "MatMulExt";
   constexpr auto kNameMatMul = "MatMul";
   constexpr auto kNameMatrixDeterminant = "MatrixDeterminant";
   constexpr auto kNameMatrixExp = "MatrixExp";
   constexpr auto kNameMax = "Max";
   constexpr auto kNameMaxPoolGradWithIndices = "MaxPoolGradWithIndices";
   constexpr auto kNameMaxPoolGradWithMask = "MaxPoolGradWithMask";
   constexpr auto kNameMaxPoolWithIndices = "MaxPoolWithIndices";
   constexpr auto kNameMaxPoolWithMask = "MaxPoolWithMask";
   constexpr auto kNameMaximumGradGrad = "MaximumGradGrad";
   constexpr auto kNameMaximumGrad = "MaximumGrad";
   constexpr auto kNameMaximum = "Maximum";
   constexpr auto kNameMeanExt = "MeanExt";
   constexpr auto kNameMin = "Min";
   constexpr auto kNameMinimumGrad = "MinimumGrad";
   constexpr auto kNameMinimum = "Minimum";
   constexpr auto kNameMul = "Mul";
   constexpr auto kNameMultiScaleDeformableAttentionV2Grad = "MultiScaleDeformableAttentionV2Grad";
   constexpr auto kNameMultiScaleDeformableAttnFunctionV2 = "MultiScaleDeformableAttnFunctionV2";
   constexpr auto kNameMv = "Mv";
   constexpr auto kNameNanToNum = "NanToNum";
   constexpr auto kNameNeg = "Neg";
   constexpr auto kNameNextAfter = "NextAfter";
   constexpr auto kNameNLLLossGrad = "NLLLossGrad";
   constexpr auto kNameNLLLoss = "NLLLoss";
   constexpr auto kNameNonZero = "NonZero";
   constexpr auto kNameNotEqual = "NotEqual";
   constexpr auto kNameNPUClearFloatStatusV2 = "NPUClearFloatStatusV2";
   constexpr auto kNameNPUGetFloatStatusV2 = "NPUGetFloatStatusV2";
   constexpr auto kNameOneHotExt = "OneHotExt";
   constexpr auto kNameOneHot = "OneHot";
   constexpr auto kNameOnesLikeExt = "OnesLikeExt";
   constexpr auto kNameOnesLike = "OnesLike";
   constexpr auto kNameOnes = "Ones";
   constexpr auto kNamePagedAttentionMask = "PagedAttentionMask";
   constexpr auto kNamePagedAttention = "PagedAttention";
   constexpr auto kNamePow = "Pow";
   constexpr auto kNamePReLUGrad = "PReLUGrad";
   constexpr auto kNamePReLU = "PReLU";
   constexpr auto kNameProdExt = "ProdExt";
   constexpr auto kNamePromptKVCache = "PromptKVCache";
   constexpr auto kNameQr = "Qr";
   constexpr auto kNameQuantBatchMatmul = "QuantBatchMatmul";
   constexpr auto kNameRandpermV2 = "RandpermV2";
   constexpr auto kNameRange = "Range";
   constexpr auto kNameRank = "Rank";
   constexpr auto kNameRealDiv = "RealDiv";
   constexpr auto kNameReal = "Real";
   constexpr auto kNameReciprocalGrad = "ReciprocalGrad";
   constexpr auto kNameReciprocal = "Reciprocal";
   constexpr auto kNameReduceAll = "ReduceAll";
   constexpr auto kNameReduceAny = "ReduceAny";
   constexpr auto kNameReduceMax = "ReduceMax";
   constexpr auto kNameReduceMean = "ReduceMean";
   constexpr auto kNameReduceMin = "ReduceMin";
   constexpr auto kNameReduceProd = "ReduceProd";
   constexpr auto kNameReduceStd = "ReduceStd";
   constexpr auto kNameReduceSum = "ReduceSum";
   constexpr auto kNameReflectionPad1DGrad = "ReflectionPad1DGrad";
   constexpr auto kNameReflectionPad1D = "ReflectionPad1D";
   constexpr auto kNameReflectionPad2DGrad = "ReflectionPad2DGrad";
   constexpr auto kNameReflectionPad2D = "ReflectionPad2D";
   constexpr auto kNameReflectionPad3DGrad = "ReflectionPad3DGrad";
   constexpr auto kNameReflectionPad3D = "ReflectionPad3D";
   constexpr auto kNameReLU6Grad = "ReLU6Grad";
   constexpr auto kNameReLU6 = "ReLU6";
   constexpr auto kNameReluGrad = "ReluGrad";
   constexpr auto kNameReLU = "ReLU";
   constexpr auto kNameReplicationPad1DGrad = "ReplicationPad1DGrad";
   constexpr auto kNameReplicationPad1D = "ReplicationPad1D";
   constexpr auto kNameReplicationPad2DGrad = "ReplicationPad2DGrad";
   constexpr auto kNameReplicationPad2D = "ReplicationPad2D";
   constexpr auto kNameReplicationPad3DGrad = "ReplicationPad3DGrad";
   constexpr auto kNameReplicationPad3D = "ReplicationPad3D";
   constexpr auto kNameReshapeAndCache = "ReshapeAndCache";
   constexpr auto kNameReshape = "Reshape";
   constexpr auto kNameResizeBicubicGrad = "ResizeBicubicGrad";
   constexpr auto kNameResizeBicubic = "ResizeBicubic";
   constexpr auto kNameResizeBilinearGrad = "ResizeBilinearGrad";
   constexpr auto kNameResizeBilinearV2 = "ResizeBilinearV2";
   constexpr auto kNameResizeD = "ResizeD";
   constexpr auto kNameResizeLinear1DGrad = "ResizeLinear1DGrad";
   constexpr auto kNameResizeLinear1D = "ResizeLinear1D";
   constexpr auto kNameResizeNearestNeighborGrad = "ResizeNearestNeighborGrad";
   constexpr auto kNameResizeNearestNeighbor = "ResizeNearestNeighbor";
   constexpr auto kNameResizeNearestNeighborV2Grad = "ResizeNearestNeighborV2Grad";
   constexpr auto kNameResizeNearestNeighborV2 = "ResizeNearestNeighborV2";
   constexpr auto kNameReverseV2 = "ReverseV2";
   constexpr auto kNameRFFT2 = "RFFT2";
   constexpr auto kNameRFFT = "RFFT";
   constexpr auto kNameRFFTN = "RFFTN";
   constexpr auto kNameRightShift = "RightShift";
   constexpr auto kNameRoll = "Roll";
   constexpr auto kNameRound = "Round";
   constexpr auto kNameRsqrtGrad = "RsqrtGrad";
   constexpr auto kNameRsqrt = "Rsqrt";
   constexpr auto kNameScalarAdd = "ScalarAdd";
   constexpr auto kNameScalarBool = "ScalarBool";
   constexpr auto kNameScalarCast = "ScalarCast";
   constexpr auto kNameScalarDiv = "ScalarDiv";
   constexpr auto kNameScalarEq = "ScalarEq";
   constexpr auto kNameScalarFloorDiv = "ScalarFloorDiv";
   constexpr auto kNameScalarGe = "ScalarGe";
   constexpr auto kNameScalarGt = "ScalarGt";
   constexpr auto kNameScalarLe = "ScalarLe";
   constexpr auto kNameScalarLog = "ScalarLog";
   constexpr auto kNameScalarLt = "ScalarLt";
   constexpr auto kNameScalarMod = "ScalarMod";
   constexpr auto kNameScalarMul = "ScalarMul";
   constexpr auto kNameScalarPow = "ScalarPow";
   constexpr auto kNameScalarSub = "ScalarSub";
   constexpr auto kNameScalarToTensor = "ScalarToTensor";
   constexpr auto kNameScalarUadd = "ScalarUadd";
   constexpr auto kNameScalarUsub = "ScalarUsub";
   constexpr auto kNameScatterNd = "ScatterNd";
   constexpr auto kNameScatter = "Scatter";
   constexpr auto kNameSelect = "Select";
   constexpr auto kNameSequenceConcat = "SequenceConcat";
   constexpr auto kNameShape = "Shape";
   constexpr auto kNameSigmoidGrad = "SigmoidGrad";
   constexpr auto kNameSigmoid = "Sigmoid";
   constexpr auto kNameSiLUGrad = "SiLUGrad";
   constexpr auto kNameSiLU = "SiLU";
   constexpr auto kNameSin = "Sin";
   constexpr auto kNameSinc = "Sinc";
   constexpr auto kNameSinh = "Sinh";
   constexpr auto kNameSliceExt = "SliceExt";
   constexpr auto kNameSoftmaxBackward = "SoftmaxBackward";
   constexpr auto kNameSoftmax = "Softmax";
   constexpr auto kNameSoftplusExt = "SoftplusExt";
   constexpr auto kNameSoftplusGradExt = "SoftplusGradExt";
   constexpr auto kNameSolveTriangular = "SolveTriangular";
   constexpr auto kNameSplit = "Split";
   constexpr auto kNameSqrtGrad = "SqrtGrad";
   constexpr auto kNameSqrt = "Sqrt";
   constexpr auto kNameSquare = "Square";
   constexpr auto kNameStridedSlice = "StridedSlice";
   constexpr auto kNameSubExt = "SubExt";
   constexpr auto kNameSub = "Sub";
   constexpr auto kNameSumExt = "SumExt";
   constexpr auto kNameTanhGrad = "TanhGrad";
   constexpr auto kNameTanh = "Tanh";
   constexpr auto kNameTensorCopySlices = "TensorCopySlices";
   constexpr auto kNameTensorShape = "TensorShape";
   constexpr auto kNameTile = "Tile";
   constexpr auto kNameTrace = "Trace";
   constexpr auto kNameTranspose = "Transpose";
   constexpr auto kNameTril = "Tril";
   constexpr auto kNameTriu = "Triu";
   constexpr auto kNameTupleToList = "TupleToList";
   constexpr auto kNameTupleToTensor = "TupleToTensor";
   constexpr auto kNameUniformExt = "UniformExt";
   constexpr auto kNameUnsortedSegmentSum = "UnsortedSegmentSum";
   constexpr auto kNameUpsampleBilinear2DGrad = "UpsampleBilinear2DGrad";
   constexpr auto kNameUpsampleBilinear2D = "UpsampleBilinear2D";
   constexpr auto kNameUpsampleLinear1DGrad = "UpsampleLinear1DGrad";
   constexpr auto kNameUpsampleLinear1D = "UpsampleLinear1D";
   constexpr auto kNameUpsampleNearest1DGrad = "UpsampleNearest1DGrad";
   constexpr auto kNameUpsampleNearest1D = "UpsampleNearest1D";
   constexpr auto kNameUpsampleNearest2DGrad = "UpsampleNearest2DGrad";
   constexpr auto kNameUpsampleNearest2D = "UpsampleNearest2D";
   constexpr auto kNameUpsampleNearest3DGrad = "UpsampleNearest3DGrad";
   constexpr auto kNameUpsampleNearest3D = "UpsampleNearest3D";
   constexpr auto kNameUpsampleTrilinear3DGrad = "UpsampleTrilinear3DGrad";
   constexpr auto kNameUpsampleTrilinear3D = "UpsampleTrilinear3D";
   constexpr auto kNameView = "View";
   constexpr auto kNameWeightQuantBatchMatmul = "WeightQuantBatchMatmul";
   constexpr auto kNameZerosLikeExt = "ZerosLikeExt";
   constexpr auto kNameZerosLike = "ZerosLike";
   constexpr auto kNameZeros = "Zeros";
   }  // namespace mindspore::ops
   
   #endif  // MINDSPORE_CORE_OP_NAME_H_
