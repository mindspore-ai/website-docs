:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_converter_include_ops_non_zero.h:

Program Listing for File non_zero.h
===================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_converter_include_ops_non_zero.h>` (``include/converter/include/ops/non_zero.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   
   #ifndef MINDSPORE_CORE_OPS_NON_ZERO_H_
   #define MINDSPORE_CORE_OPS_NON_ZERO_H_
   
   #include <vector>
   #include <memory>
   #include "ops/base_operator.h"
   #include "mindapi/base/types.h"
   #include "ops/primitive_c.h"
   #include "abstract/abstract_value.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameNonZero = "NonZero";
   class MIND_API NonZero : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(NonZero);
     NonZero() : BaseOperator(kNameNonZero) { InitIOName({"x"}, {"output"}); }
   };
   AbstractBasePtr NonZeroInfer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                                const std::vector<AbstractBasePtr> &input_args);
   using PrimNonZeroPtr = std::shared_ptr<NonZero>;
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_NON_ZERO_H_
