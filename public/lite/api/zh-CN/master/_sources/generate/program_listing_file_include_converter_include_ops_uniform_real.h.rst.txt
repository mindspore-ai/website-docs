:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_converter_include_ops_uniform_real.h:

Program Listing for File uniform_real.h
=======================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_converter_include_ops_uniform_real.h>` (``include/converter/include/ops/uniform_real.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   
   #ifndef MINDSPORE_CORE_OPS_UNIFORM_REAL_H_
   #define MINDSPORE_CORE_OPS_UNIFORM_REAL_H_
   #include <map>
   #include <memory>
   #include <string>
   #include <vector>
   
   #include "mindapi/base/types.h"
   #include "ops/base_operator.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameUniformReal = "UniformReal";
   
   class MIND_API UniformReal : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(UniformReal);
     UniformReal() : BaseOperator(kNameUniformReal) { InitIOName({"shape"}, {"output"}); }
     void Init(int64_t seed, int64_t seed2);
     void set_seed(int64_t seed);
     void set_seed2(int64_t seed2);
     int64_t get_seed() const;
     int64_t get_seed2() const;
   };
   
   constexpr auto kNameCudnnUniformReal = "CudnnUniformReal";
   class MIND_API CudnnUniformReal : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(CudnnUniformReal);
     CudnnUniformReal() : BaseOperator(kNameCudnnUniformReal) { InitIOName({"shape"}, {"output"}); }
     void Init(int64_t seed, int64_t seed2);
     void set_seed(int64_t seed);
     void set_seed2(int64_t seed2);
     int64_t get_seed() const;
     int64_t get_seed2() const;
   };
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_UNIFORM_REAL_H_
