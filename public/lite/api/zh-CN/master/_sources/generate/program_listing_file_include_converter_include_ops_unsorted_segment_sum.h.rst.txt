:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_converter_include_ops_unsorted_segment_sum.h:

Program Listing for File unsorted_segment_sum.h
===============================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_converter_include_ops_unsorted_segment_sum.h>` (``include/converter/include/ops/unsorted_segment_sum.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   
   #ifndef MINDSPORE_CORE_OPS_UNSORTED_SEGMENT_SUM_H_
   #define MINDSPORE_CORE_OPS_UNSORTED_SEGMENT_SUM_H_
   
   #include <map>
   #include <memory>
   #include <string>
   #include <vector>
   
   #include "mindapi/base/types.h"
   #include "ops/base_operator.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameUnsortedSegmentSum = "UnsortedSegmentSum";
   class MIND_API UnsortedSegmentSum : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(UnsortedSegmentSum);
     UnsortedSegmentSum() : BaseOperator(kNameUnsortedSegmentSum) {
       InitIOName({"x", "segment_ids", "num_segments"}, {"y"});
     }
     void Init() const {}
   };
   
   MIND_API abstract::AbstractBasePtr UnsortedSegmentSumInfer(const abstract::AnalysisEnginePtr &,
                                                              const PrimitivePtr &primitive,
                                                              const std::vector<abstract::AbstractBasePtr> &input_args);
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_UNSORTED_SEGMENT_SUM_H_
