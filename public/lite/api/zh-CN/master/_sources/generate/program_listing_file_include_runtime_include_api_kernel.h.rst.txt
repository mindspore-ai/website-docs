:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_runtime_include_api_kernel.h:

Program Listing for File kernel.h
=================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_runtime_include_api_kernel.h>` (``include/runtime/include/api/kernel.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   
   #ifndef MINDSPORE_LITE_INCLUDE_KERNEL_H
   #define MINDSPORE_LITE_INCLUDE_KERNEL_H
   #include <vector>
   #include <string>
   #include <utility>
   #include <map>
   #include "schema/model_generated.h"
   #include "include/api/types.h"
   #include "include/api/context.h"
   #include "include/api/kernel_api.h"
   
   namespace mindspore::kernel {
   class MS_API Kernel : public IKernel<schema::Primitive> {
    public:
     Kernel() = default;
     Kernel(const std::vector<mindspore::MSTensor> &inputs, const std::vector<mindspore::MSTensor> &outputs,
            const schema::Primitive *primitive, const mindspore::Context *ctx)
         : IKernel<schema::Primitive>(inputs, outputs, primitive, ctx) {
       Initialize();
     }
     virtual ~Kernel() = default;
     virtual schema::PrimitiveType type() const { return type_; }
     virtual schema::QuantType quant_type() const { return quant_type_; }
    protected:
     void Initialize();
   
    protected:
     schema::PrimitiveType type_ = schema::PrimitiveType_NONE;
     schema::QuantType quant_type_ = schema::QuantType_QUANT_NONE;
   };
   }  // namespace mindspore::kernel
   
   #endif  // MINDSPORE_LITE_INCLUDE_KERNEL_H
