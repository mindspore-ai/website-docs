:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_converter_include_core_ops_cumsum.h:

Program Listing for File cumsum.h
=================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_converter_include_core_ops_cumsum.h>` (``include/converter/include/core/ops/cumsum.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   
   #ifndef MINDSPORE_CORE_OPS_CUMSUM_H_
   #define MINDSPORE_CORE_OPS_CUMSUM_H_
   #include <vector>
   #include <memory>
   
   #include "ops/base_operator.h"
   #include "mindapi/base/types.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameCumSum = "CumSum";
   class MIND_API CumSum : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(CumSum);
     CumSum() : BaseOperator(kNameCumSum) {}
     void Init(const bool exclusive, const bool reverse);
     void set_exclusive(const bool exclusive);
     void set_reverse(const bool reverse);
     void set_axis(const int64_t axis);
     bool get_exclusive() const;
     bool get_reverse() const;
     int64_t get_axis() const;
   };
   abstract::AbstractBasePtr CumSumInfer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                                         const std::vector<abstract::AbstractBasePtr> &input_args);
   using PrimCumSum = std::shared_ptr<CumSum>;
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_CUMSUM_H_
