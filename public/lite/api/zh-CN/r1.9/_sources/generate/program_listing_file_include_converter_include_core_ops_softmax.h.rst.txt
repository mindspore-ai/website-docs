:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_converter_include_core_ops_softmax.h:

Program Listing for File softmax.h
==================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_converter_include_core_ops_softmax.h>` (``include/converter/include/core/ops/softmax.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   
   #ifndef MINDSPORE_CORE_OPS_SOFTMAX_H_
   #define MINDSPORE_CORE_OPS_SOFTMAX_H_
   
   #include <map>
   #include <vector>
   #include <string>
   #include <memory>
   
   #include "ops/base_operator.h"
   #include "mindapi/base/types.h"
   
   namespace mindspore {
   namespace ops {
   constexpr auto kNameSoftmax = "Softmax";
   class MIND_API Softmax : public BaseOperator {
    public:
     MIND_API_BASE_MEMBER(Softmax);
     Softmax() : BaseOperator(kNameSoftmax) { InitIOName({"x"}, {"output"}); }
     void Init(const int64_t axis = -1);
     void set_axis(const std::vector<int64_t> &axis);
     std::vector<int64_t> get_axis() const;
   };
   
   abstract::AbstractBasePtr SoftmaxInfer(const abstract::AnalysisEnginePtr &, const PrimitivePtr &primitive,
                                          const std::vector<abstract::AbstractBasePtr> &input_args);
   }  // namespace ops
   }  // namespace mindspore
   
   #endif  // MINDSPORE_CORE_OPS_SOFTMAX_H_
