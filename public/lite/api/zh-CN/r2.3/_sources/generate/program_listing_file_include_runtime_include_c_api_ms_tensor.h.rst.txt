:gitee_url: https://gitee.com/mindspore/docs


.. _program_listing_file_include_runtime_include_c_api_ms_tensor.h:

Program Listing for File tensor.h
=================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_runtime_include_c_api_ms_tensor.h>` (``include/runtime/include/c_api/ms/tensor.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   
   #ifndef MINDSPORE_CCSRC_C_API_INCLUDE_FUNC_TENSOR_H_
   #define MINDSPORE_CCSRC_C_API_INCLUDE_FUNC_TENSOR_H_
   
   #include <stdbool.h>
   #include <stdlib.h>
   #include "include/c_api/ms/base/macros.h"
   #include "include/c_api/ms/base/status.h"
   #include "include/c_api/ms/base/types.h"
   #include "include/c_api/ms/base/handle_types.h"
   #include "include/c_api/ms/context.h"
   
   #ifdef __cplusplus
   extern "C" {
   #endif
   
   MIND_C_API TensorHandle MSNewTensor(ResMgrHandle res_mgr, void *data, DataTypeC type, const int64_t shape[],
                                       size_t shape_size, size_t data_len);
   
   MIND_C_API TensorHandle MSNewTensorFromFile(ResMgrHandle res_mgr, DataTypeC type, const int64_t shape[],
                                               size_t shape_size, const char *path);
   
   MIND_C_API TensorHandle MSNewTensorWithSrcType(ResMgrHandle res_mgr, void *data, const int64_t shape[],
                                                  size_t shape_size, DataTypeC tensor_type, DataTypeC src_type);
   
   MIND_C_API TensorHandle MSNewTensorScalarFloat32(ResMgrHandle res_mgr, float value);
   
   MIND_C_API TensorHandle MSNewTensorScalarInt32(ResMgrHandle res_mgr, int value);
   
   MIND_C_API void *MSTensorGetData(ResMgrHandle res_mgr, ConstTensorHandle tensor);
   
   MIND_C_API STATUS MSTensorSetDataType(ResMgrHandle res_mgr, TensorHandle tensor, DataTypeC type);
   
   MIND_C_API DataTypeC MSTensorGetDataType(ResMgrHandle res_mgr, ConstTensorHandle tensor, STATUS *error);
   
   MIND_C_API size_t MSTensorGetDataSize(ResMgrHandle res_mgr, ConstTensorHandle tensor, STATUS *error);
   
   MIND_C_API size_t MSTensorGetElementNum(ResMgrHandle res_mgr, ConstTensorHandle tensor, STATUS *error);
   
   MIND_C_API size_t MSTensorGetDimension(ResMgrHandle res_mgr, ConstTensorHandle tensor, STATUS *error);
   
   MIND_C_API STATUS MSTensorSetShape(ResMgrHandle res_mgr, TensorHandle tensor, const int64_t shape[], size_t dim);
   
   MIND_C_API STATUS MSTensorGetShape(ResMgrHandle res_mgr, ConstTensorHandle tensor, int64_t shape[], size_t dim);
   
   #ifdef __cplusplus
   }
   #endif
   #endif  // MINDSPORE_CCSRC_C_API_INCLUDE_FUNC_TENSOR_H_
