# Release Notes

## 0.7.0 Release Notes

### Major Features and Improvements

#### Circuit

- [STABLE] [`as_encoder`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.circuit.html#mindquantum.core.circuit.Circuit.as_encoder): Method of `Circuit` to mark this circuit as an encoder circuit.
- [STABLE] [`as_ansatz`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.circuit.html#mindquantum.core.circuit.Circuit.as_ansatz): Method of `Circuit` to mark this circuit as an ansatz circuit.
- [STABLE] [`encoder_params_name`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.circuit.html#mindquantum.core.circuit.Circuit.encoder_params_name): Method of `Circuit` to return all encoder parameters in the circuit.
- [STABLE] [`ansatz_params_name`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.circuit.html#mindquantum.core.circuit.Circuit.ansatz_params_name): Method of `Circuit` to return all ansatz parameters in the circuit.
- [STABLE] [`remove_noise`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.circuit.html#mindquantum.core.circuit.Circuit.remove_noise): Method of `Circuit` to remove all noise channels.
- [STABLE] [`with_noise`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.circuit.html#mindquantum.core.circuit.Circuit.with_noise): Method of `Circuit` to add a given noise channel after every non-noise gate.
- [STABLE] [`as_encoder`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.circuit.html#mindquantum.core.circuit.as_encoder): A decorator to mark the circuit returned by the decorator function as an encoder circuit.
- [STABLE] [`as_ansatz`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.circuit.html#mindquantum.core.circuit.as_ansatz): A decorator to mark the circuit returned by the decorator function as an ansatz circuit.
- [STABLE] [`qfi`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.circuit.html#mindquantum.core.circuit.qfi): A method that can calculate the quantum fisher information of a given parameterized quantum circuit.
- [STABLE] [`partial_psi_partial_psi`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.circuit.html#mindquantum.core.circuit.partial_psi_partial_psi): A method that can calculate the first part of quantum fisher information.
- [STABLE] [`partial_psi_psi`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.circuit.html#mindquantum.core.circuit.partial_psi_psi): A method that can calculate the second part of quantum fisher information.

#### Gates

- [STABLE] [`AmplitudeDampingChannel`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.gates.html#mindquantum.core.gates.AmplitudeDampingChannel): Amplitude damping channel, caused by the energy dissipation.
- [STABLE] [`PhaseDampingChannel`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.gates.html#mindquantum.core.gates.PhaseDampingChannel): Phase damping channel express error that qubit loses quantum information without exchanging energy with environment.

#### FermionOperator and QubitOperator

- [STABLE] [`split`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.operators.html#mindquantum.core.operators.FermionOperator.split): A method of `FermionOperator` and `QubitOperator` that can split the coefficient with the operator.

#### ParameterResolver

- [STABLE] [`astype`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.parameterresolver.html#mindquantum.core.parameterresolver.ParameterResolver.astype): Convert the ParameterResolver to a given type.
- [STABLE] [`const`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.parameterresolver.html#mindquantum.core.parameterresolver.ParameterResolver.const): Get the constant part of this ParameterResolver.
- [STABLE] [`is_const`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.parameterresolver.html#mindquantum.core.parameterresolver.ParameterResolver.is_const): Check whether this ParameterResolver is constant.
- [STABLE] [`encoder_part`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.parameterresolver.html#mindquantum.core.parameterresolver.ParameterResolver.encoder_part): Set a part of parameters to be encoder parameters.
- [STABLE] [`ansatz_part`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.parameterresolver.html#mindquantum.core.parameterresolver.ParameterResolver.ansatz_part): Set a part of parameters to be ansatz parameters.
- [STABLE] [`as_encoder`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.parameterresolver.html#mindquantum.core.parameterresolver.ParameterResolver.as_encoder): Set all parameters to encoder parameters.
- [STABLE] [`as_ansatz`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.parameterresolver.html#mindquantum.core.parameterresolver.ParameterResolver.as_ansatz): Set all parameters to ansatz parameters.
- [STABLE] [`encoder_parameters`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.parameterresolver.html#mindquantum.core.parameterresolver.ParameterResolver.encoder_parameters): Return all encoder parameters.
- [STABLE] [`ansatz_parameters`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.parameterresolver.html#mindquantum.core.parameterresolver.ParameterResolver.ansatz_parameters): Return all ansatz parameters.
- [STABLE] [`is_hermitian`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.parameterresolver.html#mindquantum.core.parameterresolver.ParameterResolver.is_hermitian): Check whether this ParameterResolver is hermitian conjugate.
- [STABLE] [`is_anti_hermitian`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.parameterresolver.html#mindquantum.core.parameterresolver.ParameterResolver.is_anti_hermitian): Check whether this ParameterResolver is anti hermitian conjugate.
- [STABLE] [`no_grad_parameters`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.parameterresolver.html#mindquantum.core.parameterresolver.ParameterResolver.no_grad_parameters): Return all parameters that do no require gradient.
- [STABLE] [`requires_grad_parameters`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.core.parameterresolver.html#mindquantum.core.parameterresolver.ParameterResolver.requires_grad_parameters): Return all parameters that require gradient.

#### Simulator

- [STABLE] [`copy`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.simulator.html#mindquantum.simulator.Simulator.copy): The simulator now supports replication.
- [STABLE] [`apply_gate`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.simulator.html#mindquantum.simulator.Simulator.apply_gate): In this version, you can apply a gate in differential version.
- [BETA] [`inner_product`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.simulator.html#mindquantum.simulator.inner_product): Calculate the inner product of two states in two given simulators.

#### IO

- [STABLE] [`BlochScene`](https://mindspore.cn/mindquantum/docs/en/r0.7/mindquantum.io.html): We support the establishment of a Bloch sphere mapping scene, which can draw quantum states on it, and can also dynamically demonstrate the change of quantum states.

### Contributors

Thanks goes to these wonderful people:

yufan, wengwenkang, xuxusheng, Damien Ngyuen, zhouxu, wangzidong, yangkang, lujiale, zhangzhenghai, fanyi, zhangwengang, wangkaisheng, zhoufeng, wangsiyuan, gongxiaoqing, chengxianbin, sunxiyin, wenwenkang, lvdingshun, cuijiangyu, chendiqing, zhangkai, Zotov Yuriy, liqin, zengjinglin, cuixiaopeng, 朱祎康, dorothy20212021, dsdsdshe, buyulin, norl-corxilea, herunhong, Arapat Ablimit, NoE, panshijie, longhanlin.

Contributions of any kind are welcome!
